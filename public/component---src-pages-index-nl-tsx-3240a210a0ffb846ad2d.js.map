{"version":3,"sources":["webpack:///./src/components/Story.tsx","webpack:///./src/pages/index.nl.tsx"],"names":["Story","_ref","language","story","_18498956","data","drupal","articles","entities","find","article","fieldIdentifier","entityTranslations","transl","langcode","value","console","log","react","Main","title","ReactHtmlParser","body","processed","IndexPage","eventEntities","_2487760818","events","filteredEvents","filterEvents","upcomingPerSeminar","eventsMiddleEast","eventsWestAfrica","eventsRussia","sort","a","b","Date","fieldDateDay1","date","react_default","createElement","layout","lang","header","Fragment","seo","keywords","description","UpcomingEvents","Story_Story"],"mappings":"8NAKaA,EAAQ,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAmChBC,EAnC+BC,EAAAC,KAC7BC,OAiCuBC,SAASC,SAErCC,KAAK,SAAAC,GAAO,MAAgC,UAA5BA,EAAQC,kBACxBC,mBAAmBH,KAAK,SAAAI,GAAM,OAAIA,EAAOC,SAASC,QAAUb,IAG/D,OADAc,QAAQC,IAAId,GAEVe,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,wBAAKf,EAAMiB,OACVC,IAAgBlB,EAAMmB,KAAKC,aCuCnBC,UA7EG,SAAAvB,GAAcA,EAAXI,KAAW,IA6CxBoB,EA7CwBC,EAAArB,KACtBC,OA4CqBqB,OAAOnB,SAC9BoB,EAAiBC,YAAaJ,GAC9BK,EAAqB,CACzBF,EAAeG,iBAAiB,GAChCH,EAAeI,iBAAiB,GAChCJ,EAAeK,aAAa,IAC5BC,KAAK,SAACC,EAAGC,GAGT,OAFmB,IAAIC,KAAKF,EAAEG,cAAcC,MACzB,IAAIF,KAAKD,EAAEE,cAAcC,QAI9C,OACEC,EAAAL,EAAAM,cAACC,EAAA,EAAD,CAAQC,KAfO,MAgBbH,EAAAL,EAAAM,cAACtB,EAAA,EAAD,KACEqB,EAAAL,EAAAM,cAACG,EAAA,EAAD,CAAQ1C,SAjBG,OAkBXsC,EAAAL,EAAAM,cAACD,EAAAL,EAAMU,SAAP,KACEL,EAAAL,EAAAM,cAACK,EAAA,EAAD,CACE1B,MAAM,OACN2B,SAAU,iCACVC,YAAY,kBAGhBR,EAAAL,EAAAM,cAACQ,EAAA,EAAD,CAAgBtB,OAAQG,EAAoB5B,SAzBjC,QA2BbsC,EAAAL,EAAAM,cAACtB,EAAA,EAAD,KACEqB,EAAAL,EAAAM,cAACS,EAAD,CAAOhD,SA5BI","file":"component---src-pages-index-nl-tsx-3240a210a0ffb846ad2d.js","sourcesContent":["import * as React from \"react\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { StoryTelling as StyledStory } from \"../styles/Main\";\n\nexport const Story = ({ language }) => {\n  const { drupal } = useStaticQuery(graphql`\n    query {\n      drupal {\n        articles: nodeQuery(\n          filter: { conditions: [{ field: \"type\", value: \"article\" }] }\n        ) {\n          entities {\n            ... on DRUPAL_NodeArticle {\n              fieldIdentifier\n            }\n            entityTranslations {\n              ... on DRUPAL_NodeArticle {\n                uuid\n                langcode {\n                  value\n                }\n                title\n                fieldIdentifier\n                body {\n                  value\n                  format\n                  processed\n                  summary\n                  summaryProcessed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const articleEntities = drupal.articles.entities;\n  const story = articleEntities\n    .find(article => article.fieldIdentifier === \"story\")\n    .entityTranslations.find(transl => transl.langcode.value === language);\n\n  console.log(story);\n  return (\n    <StyledStory>\n      <h2>{story.title}</h2>\n      {ReactHtmlParser(story.body.processed)}\n    </StyledStory>\n  );\n};\n","import React from \"react\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport Header from \"../components/header\";\nimport { UpcomingEvents } from \"../components/UpcomingEvents\";\nimport SEO from \"../components/seo\";\nimport { filterEvents } from \"../lib/filterEvents\";\nimport { AboveTheFold, StoryTelling, BrowserWindow } from \"../styles/Main\";\nimport { Story } from \"../components/Story\";\n\nconst IndexPage = ({ data }) => {\n  const { drupal } = useStaticQuery(graphql`\n    query {\n      drupal {\n        events: nodeQuery(\n          filter: { conditions: [{ field: \"type\", value: \"events\" }] }\n        ) {\n          entities {\n            entityType\n            ... on DRUPAL_NodeEvents {\n              uuid\n              langcode {\n                value\n              }\n              title\n              fieldLocationCity\n              fieldLocationVenue\n              fieldDateDay1 {\n                value\n                date\n              }\n              fieldDatesText\n              fieldSeminar {\n                targetId\n                entity {\n                  ... on DRUPAL_NodeSeminar {\n                    title\n                    fieldImageNight {\n                      derivative(style: LARGE) {\n                        height\n                        width\n                        url\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  const language = \"nl\";\n\n  const eventEntities = drupal.events.entities;\n  const filteredEvents = filterEvents(eventEntities);\n  const upcomingPerSeminar = [\n    filteredEvents.eventsMiddleEast[0],\n    filteredEvents.eventsWestAfrica[0],\n    filteredEvents.eventsRussia[0],\n  ].sort((a, b) => {\n    const aDate: any = new Date(a.fieldDateDay1.date);\n    const bDate: any = new Date(b.fieldDateDay1.date);\n    return aDate - bDate;\n  });\n\n  return (\n    <Layout lang={language}>\n      <AboveTheFold>\n        <Header language={language} />\n        <React.Fragment>\n          <SEO\n            title=\"Home\"\n            keywords={[`gatsby`, `application`, `react`]}\n            description=\"omschrijving\"\n          />\n        </React.Fragment>\n        <UpcomingEvents events={upcomingPerSeminar} language={language} />\n      </AboveTheFold>\n      <BrowserWindow>\n        <Story language={language} />\n      </BrowserWindow>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}