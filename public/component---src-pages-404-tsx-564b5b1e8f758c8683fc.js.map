{"version":3,"sources":["webpack:///./src/components/seo.tsx","webpack:///./src/pages/404.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/lib/LanguageStateProvider.tsx","webpack:///./src/lib/Providers.tsx","webpack:///./src/components/header.tsx","webpack:///./src/styles/styled-components.ts","webpack:///./src/styles/constants.ts","webpack:///./src/styles/index.ts","webpack:///./src/styles/buttons.ts","webpack:///./src/styles/Main.ts","webpack:///./src/components/layout.tsx"],"names":["SEO","_ref","description","site","lang","meta","keywords","title","_2417117884","data","siteMetadata","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","NotFoundPage","react_default","a","createElement","layout","seo","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","shape","StaticQueryContext","createContext","StaticQuery","props","Consumer","staticQueryData","query","render","children","object","func","Ctx","Provider","LanguageStateProvider","_React$Component","_this","call","this","setLanguage","language","setState","state","availableLanguages","inheritsLoose_default","prototype","react","LanguageStateProvider_Provider","value","LanguageStateProvider_LanguageStateProvider","Header","header","_2176486503","drupal","nodeQuery","entities","entityTranslations","find","langcode","console","log","styled","styledComponents","createGlobalStyle","COLOR","BLACK","WHITE","WHITE_RGB","RICHBLACK","RICHBLACK_RBG","VDEP_BLUE","VDEP_SECONDARY_BLUE","VDEP_GREEN","RICHBLACK_80","WHITE_15","RICKBLACK_15","Global","_templateObject","Button","div","buttons_templateObject","StyledContainer","Main_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","isActive","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","heroImgUrl","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","Layout","es","Providers_Provider","gatsby_browser_entry_StaticQuery","Fragment","components_header","_3365235047"],"mappings":"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","file":"component---src-pages-404-tsx-564b5b1e8f758c8683fc.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return null;\n  // <Helmet\n  //   htmlAttributes={{\n  //     lang,\n  //   }}\n  //   title={title}\n  //   titleTemplate={`%s | ${site.siteMetadata.title}`}\n  //   meta={[\n  //     {\n  //       name: `description`,\n  //       content: metaDescription,\n  //     },\n  //     {\n  //       property: `og:title`,\n  //       content: title,\n  //     },\n  //     {\n  //       property: `og:description`,\n  //       content: metaDescription,\n  //     },\n  //     {\n  //       property: `og:type`,\n  //       content: `website`,\n  //     },\n  //     {\n  //       name: `twitter:card`,\n  //       content: `summary`,\n  //     },\n  //     {\n  //       name: `twitter:creator`,\n  //       content: site.siteMetadata.author,\n  //     },\n  //     {\n  //       name: `twitter:title`,\n  //       content: title,\n  //     },\n  //     {\n  //       name: `twitter:description`,\n  //       content: metaDescription,\n  //     },\n  //   ]\n  //     .concat(\n  //       keywords.length > 0\n  //         ? {\n  //             name: `keywords`,\n  //             content: keywords.join(`, `),\n  //           }\n  //         : []\n  //     )\n  //     .concat(meta)}\n  // />\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" description=\"not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from \"react\";\n\ntype ProviderProps = {\n  language: string;\n  availableLanguages: string[];\n  setLanguage: (language: string) => void;\n};\n\ntype State = {\n  language: string;\n  availableLanguages: string[];\n};\n\nconst Ctx = React.createContext({} as ProviderProps);\n\nexport const LanguageState = Ctx.Consumer;\nconst Provider = Ctx.Provider;\n\nexport class LanguageStateProvider extends React.Component<{}, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      language: \"nl\",\n      availableLanguages: [\"nl\", \"en\"],\n    };\n  }\n\n  setLanguage = (language: string) => {\n    this.setState({\n      language,\n    });\n  };\n\n  render() {\n    return (\n      <Provider\n        value={{\n          language: this.state.language,\n          setLanguage: this.setLanguage,\n          availableLanguages: this.state.availableLanguages,\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { LanguageStateProvider } from \"./LanguageStateProvider\";\n\nexport const Provider: React.SFC = ({ children }) => (\n  <LanguageStateProvider>{children}</LanguageStateProvider>\n);\n","import { Link, graphql, StaticQuery, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\n\nimport { LanguageState } from \"../lib/LanguageStateProvider\";\nimport { translate as t } from \"../lib/i18n\";\n\nimport Image from \"./image\";\nimport {\n  Header as StyledHeader,\n  Hero,\n  NavBar,\n  Logo,\n  LogoBox,\n  Menu,\n  MenuItem,\n  NavBarRight,\n  LangBox,\n  LangOption,\n  SiteTitleContainer,\n  LogoContainer,\n  CoG,\n  LogoTextOne,\n  LogoTextTwo,\n  LogoTextThree,\n  SitePayoff,\n} from \"../styles/Main\";\nimport { Button } from \"../styles/buttons\";\n\nconst Header = ({ language }) => {\n  const { drupal } = useStaticQuery(graphql`\n    query {\n      drupal {\n        nodeQuery(\n          filter: { conditions: [{ field: \"type\", value: \"header\" }] }\n        ) {\n          entities {\n            entityTranslations {\n              ... on DRUPAL_NodeHeader {\n                uuid\n                langcode {\n                  value\n                }\n                title\n                fieldCogMessage\n                fieldCogSubMessage\n                fieldHeroImage {\n                  alt\n                  url\n                  height\n                  width\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  const header = drupal.nodeQuery.entities[0].entityTranslations.find(\n    lang => lang.langcode.value === language\n  );\n  console.log(header);\n  return (\n    <div />\n    // <StyledHeader>\n    //   <NavBar>\n    //     <LogoBox>\n    //       <Link to=\"/\">\n    //         <Logo>\n    //           <Image fileName={\"VDEP_Vignet_Logo.png\"} />\n    //         </Logo>\n    //       </Link>\n    //     </LogoBox>\n    //     <Menu>\n    //       <MenuItem>{t(\"ABOUTUS\", language)}</MenuItem>\n    //       <MenuItem>{t(\"OURSEMINARS\", language)}</MenuItem>\n    //       <MenuItem>{t(\"FAQs\", language)}</MenuItem>\n    //     </Menu>\n    //     <NavBarRight>\n    //       <LangBox>\n    //         <Link to=\"/en\">\n    //           <LangOption isActive={language === \"en\"}>EN</LangOption>\n    //         </Link>\n    //         /\n    //         <Link to=\"/\">\n    //           <LangOption isActive={language === \"nl\"}>NL</LangOption>\n    //         </Link>\n    //       </LangBox>\n    //       <Button>{t(\"MAKEINQ\", language)}</Button>\n    //     </NavBarRight>\n    //   </NavBar>\n    //   <Hero heroImgUrl={header.fieldHeroImage.url}>\n    //     <SiteTitleContainer>\n    //       <LogoContainer>\n    //         <CoG>\n    //           <Image fileName={\"190425_CoG_Logo_WO-title.png\"} />\n    //         </CoG>\n    //         <h1>\n    //           <LogoTextOne>{t(\"COMMUNICATION\", language)}</LogoTextOne>\n    //           <LogoTextTwo>{t(\"ACCROSS\", language)}</LogoTextTwo>\n    //           <LogoTextThree>{t(\"BORDERS\", language)}</LogoTextThree>\n    //         </h1>\n    //       </LogoContainer>\n    //       <SitePayoff>\n    //         <h2>{header.fieldCogMessage}</h2>\n    //         <h3>{header.fieldCogSubMessage}</h3>\n    //       </SitePayoff>\n    //     </SiteTitleContainer>\n    //   </Hero>\n    // </StyledHeader>\n  );\n};\n\nexport default Header;\n","import * as styledComponents from \"styled-components\";\n\nimport ThemeInterface from \"./theme\";\n\nconst {\n  default: styled,\n  css,\n  // @ts-ignore\n  createGlobalStyle,\n  keyframes,\n  ThemeProvider,\n} = styledComponents;\n\nexport { css, keyframes, ThemeProvider, createGlobalStyle };\nexport default styled;\n","const BLACK = \"#000\";\nconst WHITE = \"#fff\";\nconst WHITE_RGB = \"255,255,255\";\nconst RICHBLACK = \"#002233\";\nconst RICHBLACK_RBG = \"0,34,51\";\nconst VDEP_BLUE = \"#00ADF1\";\nconst VDEP_SECONDARY_BLUE = \"#0084B5\";\nconst VDEP_GREEN = \"7CC04E\";\n\nexport const COLOR = {\n  BLACK,\n  WHITE,\n  WHITE_RGB,\n  RICHBLACK,\n  RICHBLACK_RBG,\n  VDEP_BLUE,\n  VDEP_SECONDARY_BLUE,\n  VDEP_GREEN,\n  RICHBLACK_80: `rgba(${RICHBLACK_RBG},.8)`,\n  WHITE_15: `rgba(${WHITE_RGB}, .15)`,\n  RICKBLACK_15: `rgba(${RICHBLACK_RBG}, .15)`,\n};\n\nexport const STYLES = {\n  FONT_FAMILY: `'Source Sans Pro',sans-serif`,\n  MARGIN: 24,\n  HEADER_HEIGHT: 130,\n  TITLES_HEIGHT: 60,\n  ITEM_MODULE_HEIGHT: 65,\n  ITEM_GROUP_HEIGHT: 50,\n  ITEM_HEIGHT: 50,\n  LIST_ITEM_HEIGHT: 70,\n  LIST_ITEM_GROUP_HEIGHT: 30,\n  BOTTOM_BAR_HEIGHT: 90,\n\n  COLOR_ERROR: \"#F4562B\",\n  COLOR_OK: \"#74d200\",\n  COLOR_BORDER: \"rgba(0, 34, 51, 0.10)\",\n\n  COLOR_TITLE: \"rgba(0, 34, 51, 0.80)\",\n  COLOR_GREY_TEXT: \"rgba(0, 34, 51, 0.5)\",\n  COLOR_GREY_TEXT_HOVER: \"rgba(0, 34, 51, 0.80)\",\n  COLOR_GREY_TEXT_INPUT: \"rgba(0, 34, 51, 0.80)\",\n\n  COLOR_BACKGROUND: \"#fff\",\n  COLOR_BACKGROUND_DARK: \"rgba(0, 34, 51, 0.80)\",\n\n  COLOR_INPUT_PLACEHOLDER: \"rgba(0, 34, 51, 0.30)\",\n  COLOR_INPUT_BORDER_FOCUS: \"rgba(0, 34, 51, 0.25)\",\n  COLOR_INPUT_ICON: \"rgba(0, 34, 51, 0.30)\",\n  COLOR_INPUT_ICON_FOCUS: \"rgba(0, 34, 51, 0.50)\",\n};\n","import { createGlobalStyle } from \"./styled-components\";\nimport { COLOR } from \"./constants\";\n\nexport const Global = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Roboto+Slab');\n@import url('https://fonts.googleapis.com/css?family=Roboto');\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit;\n}\n\nhtml {\n  // This defines what 1rem is. 100% is 16px (most of the time).\n  font-size: 62.5%; // 10px\n  font-family: 'Roboto';\n}\n\nbody {\n  box-sizing: border-box;\n}\n\na,\na:visited {\n  text-decoration: none;\n  color: ${COLOR.VDEP_SECONDARY_BLUE}\n}\n`;\n","import styled from \"./styled-components\";\nimport { COLOR } from \"./constants\";\n\nexport const Button = styled.div`\n  margin-right: 1rem;\n  width: 22rem;\n  min-width: 4rem;\n  height: 6rem;\n  border: 1px solid transparent;\n  border-radius: 0.5rem;\n  background-color: ${COLOR.VDEP_BLUE};\n  color: ${COLOR.WHITE}\n  font-family: 'Roboto Slab', 'sans-serif';\n  font-weight: bold;\n  font-size: 2rem;\n  line-height: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 1.6rem;\n\n  cursor: pointer;\n`;\n","import styled from \"./styled-components\";\nimport { COLOR, STYLES } from \"./constants\";\nimport { Button } from \"./buttons\";\n\nexport const StyledContainer = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  background: ${COLOR.WHITE};\n  position: relative;\n`;\n\nexport const NavBar = styled.div`\n  height: 8.5rem;\n  width: 100%;\n  display: flex;\n  position: fixed;\n  background: ${COLOR.WHITE_15};\n  border-bottom: 0.1rem solid ${COLOR.VDEP_BLUE};\n  z-index: 1000;\n  justify-content: space-evenly;\n  align-items: center;\n\n  font-family: \"Roboto Slab\", \"sans-serif\";\n  font-size: 2rem;\n`;\n\nexport const NavBarRight = styled.div`\n  margin-left: 4rem;\n  ${Button} {\n    margin-right: 3rem;\n  }\n  display: flex;\n`;\n\nexport const LangBox = styled.div`\n  color: ${COLOR.VDEP_SECONDARY_BLUE}\n  font-weight: normal;\n  min-width: 10rem;\n  display: flex;\n  align-items: center;\n`;\n\nexport const LangOption = styled.div<{ isActive?: boolean }>`\n  ${props => props.isActive && \"font-weight: 900\"}\n  cursor: pointer;\n`;\n\nexport const LogoBox = styled.div`\n  margin-left: 3rem;\n  width: 30rem;\n`;\n\nexport const Logo = styled.div`\n  width: 6rem;\n`;\n\nexport const Menu = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const MenuItem = styled.div`\n  font-weight: bold;\n  color: ${COLOR.WHITE};\n  margin: 0 3rem;\n`;\n\nexport const Header = styled.div`\n  width: 100%;\n  height: 70vh;\n  position: relative;\n`;\n\ntype HeroProps = {\n  heroImgUrl: string;\n};\n\nexport const Hero = styled.div<HeroProps>`\n  background-image: url(${props => props.heroImgUrl});\n  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);\n  background-size: cover;\n  background-position: top;\n  height: 100%;\n  position: relative;\n`;\n\nexport const SiteTitleContainer = styled.div`\n  position: absolute;\n  top: 55%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const SitePayoff = styled.div`\n  position: relative;\n  top: 3rem;\n  font-family: \"Roboto\", \"sans-serif\";\n  color: ${COLOR.WHITE};\n  width: 90%;\n\n  h2 {\n    font-size: 1.6rem;\n    font-weight: bold;\n    margin: 2rem 0;\n  }\n  h3 {\n    font-size: 1.6rem;\n    font-weight: normal;\n    margin: 2rem 0;\n  }\n`;\n\nexport const LogoContainer = styled.div`\n  display: flex;\n\n  h1 {\n    font-family: \"Roboto Slab\", \"sans-serif\";\n    color: ${COLOR.WHITE};\n    font-size: 0.04rem;\n    text-align: center;\n    position: relative;\n    top: 0.5rem;\n    font-weight: 700;\n    letter-spacing: 0.1em;\n    display: inline-block;\n  }\n`;\n\nexport const CoG = styled.div`\n  width: 20rem;\n`;\n\nexport const LogoTextOne = styled.div`\n  text-transform: uppercase;\n  font-size: 72em;\n  display: block;\n`;\n\nexport const LogoTextTwo = styled.div`\n  font-size: 40em;\n  text-transform: lowercase;\n  display: inline-block;\n  position: absolute;\n  top: 1.8em;\n  left: 0;\n  width: 100%;\n\n  &:before,\n  &:after {\n    content: \"\";\n    position: absolute;\n    height: 0.28em;\n    border-bottom: 0.15em solid ${COLOR.WHITE};\n    top: 0.5em;\n    left: 0;\n    width: 10%;\n  }\n  &:before {\n    margin-left: 6px;\n    width: 38%;\n    position: absolute;\n    top: 0.8rem;\n  }\n  &:after {\n    left: 55%;\n    margin-left: 9px;\n    width: 36%;\n    position: absolute;\n    top: 0.8rem;\n  }\n`;\n\nexport const LogoTextThree = styled.div`\n  text-transform: uppercase;\n  font-size: 96em;\n  display: block;\n  letter-spacing: 0.2em;\n  position: absolute;\n  top: 1.1em;\n  left: 0.08em;\n  font-weight: 900;\n`;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { Router, Link, Location } from \"@reach/router\";\n\nimport { Provider } from \"../lib/Providers\";\n\nimport Header from \"./header\";\nimport { Global } from \"../styles\";\n\nimport { StyledContainer } from \"../styles/Main\";\n\nconst Layout = props => {\n  const { children, lang } = props;\n  // console.log(props);\n  return (\n    <Location>\n      {({ location }) => {\n        // console.log(location);\n        return (\n          <Provider>\n            <StaticQuery\n              query={graphql`\n                query SiteTitleQuery {\n                  site {\n                    siteMetadata {\n                      title\n                    }\n                  }\n                }\n              `}\n              render={data => (\n                <React.Fragment>\n                  <Global />\n                  <StyledContainer>\n                    <Header language={lang} />\n                    <div>\n                      <main>{children}</main>\n                      <footer />\n                    </div>\n                  </StyledContainer>\n                </React.Fragment>\n              )}\n            />\n          </Provider>\n        );\n      }}\n    </Location>\n  );\n};\n\nexport default Layout;\n"],"sourceRoot":""}