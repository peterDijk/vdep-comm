{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/lib/LanguageStateProvider.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/lib/Providers.tsx","webpack:///./src/styles/constants.ts","webpack:///./src/components/Header.tsx","webpack:///./src/styles/styled-components.ts","webpack:///./src/styles/Main.ts","webpack:///./src/components/layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","description","Ctx","React","LanguageState","Consumer","Provider","LanguageStateProvider","_React$Component","props","_this","call","this","setLanguage","language","setState","state","availableLanguages","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0___default","prototype","render","console","log","react__WEBPACK_IMPORTED_MODULE_1__","value","children","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","site","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","siteMetadata","defaultProps","array","arrayOf","StaticQueryContext","createContext","StaticQuery","react_default","staticQueryData","query","object","func","react","COLOR","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","gatsby_link_default","to","color","textDecoration","_ref2","onClick","styled","styledComponents","StyledContainer","div","_templateObject","Layout","Providers_Provider","gatsby_browser_entry_StaticQuery","components_Header","paddingTop","_2994927498","node"],"mappings":"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","file":"component---src-pages-404-tsx-92591ff01287183b6e61.js","sourcesContent":["import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" description=\"not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import * as React from \"react\";\n\ntype ProviderProps = {\n  language: string;\n  availableLanguages: string[];\n  setLanguage: (language: string) => void;\n};\n\ntype State = {\n  language: string;\n  availableLanguages: string[];\n};\n\nconst Ctx = React.createContext({} as ProviderProps);\n\nexport const LanguageState = Ctx.Consumer;\nconst Provider = Ctx.Provider;\n\nexport class LanguageStateProvider extends React.Component<{}, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      language: \"nl\",\n      availableLanguages: [\"nl\", \"en\"],\n    };\n  }\n\n  setLanguage = (language: string) => {\n    this.setState({\n      language,\n    });\n  };\n\n  render() {\n    console.log({ language: this.state.language });\n    return (\n      <Provider\n        value={{\n          language: this.state.language,\n          setLanguage: this.setLanguage,\n          availableLanguages: this.state.availableLanguages,\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return null;\n  // <Helmet\n  //   htmlAttributes={{\n  //     lang,\n  //   }}\n  //   title={title}\n  //   titleTemplate={`%s | ${site.siteMetadata.title}`}\n  //   meta={[\n  //     {\n  //       name: `description`,\n  //       content: metaDescription,\n  //     },\n  //     {\n  //       property: `og:title`,\n  //       content: title,\n  //     },\n  //     {\n  //       property: `og:description`,\n  //       content: metaDescription,\n  //     },\n  //     {\n  //       property: `og:type`,\n  //       content: `website`,\n  //     },\n  //     {\n  //       name: `twitter:card`,\n  //       content: `summary`,\n  //     },\n  //     {\n  //       name: `twitter:creator`,\n  //       content: site.siteMetadata.author,\n  //     },\n  //     {\n  //       name: `twitter:title`,\n  //       content: title,\n  //     },\n  //     {\n  //       name: `twitter:description`,\n  //       content: metaDescription,\n  //     },\n  //   ]\n  //     .concat(\n  //       keywords.length > 0\n  //         ? {\n  //             name: `keywords`,\n  //             content: keywords.join(`, `),\n  //           }\n  //         : []\n  //     )\n  //     .concat(meta)}\n  // />\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from \"react\";\nimport { LanguageStateProvider } from \"./LanguageStateProvider\";\n\nexport const Provider: React.SFC = ({ children }) => (\n  <LanguageStateProvider>{children}</LanguageStateProvider>\n);\n","const BLACK = \"#000\";\nconst WHITE = \"#fff\";\nconst RICHBLACK = \"#002233\";\nconst RICHBLACK_RBG = \"0,34,51\";\nconst VDEP_BLUE = \"#00AEED\";\nconst VDEP_SECONDARY_BLUE = \"0183B7\";\nconst VDEP_GREEN = \"7CC04E\";\n\nexport const COLOR = {\n  BLACK,\n  WHITE,\n  RICHBLACK,\n  RICHBLACK_RBG,\n  VDEP_BLUE,\n  VDEP_SECONDARY_BLUE,\n  VDEP_GREEN,\n  RICHBLACK_80: `rgba(${RICHBLACK_RBG},.8)`,\n};\n\nexport const STYLES = {\n  FONT_FAMILY: `'Source Sans Pro',sans-serif`,\n  MARGIN: 24,\n  HEADER_HEIGHT: 130,\n  TITLES_HEIGHT: 60,\n  ITEM_MODULE_HEIGHT: 65,\n  ITEM_GROUP_HEIGHT: 50,\n  ITEM_HEIGHT: 50,\n  LIST_ITEM_HEIGHT: 70,\n  LIST_ITEM_GROUP_HEIGHT: 30,\n  BOTTOM_BAR_HEIGHT: 90,\n\n  COLOR_ERROR: \"#F4562B\",\n  COLOR_OK: \"#74d200\",\n  COLOR_BORDER: \"rgba(0, 34, 51, 0.10)\",\n\n  COLOR_TITLE: \"rgba(0, 34, 51, 0.80)\",\n  COLOR_GREY_TEXT: \"rgba(0, 34, 51, 0.5)\",\n  COLOR_GREY_TEXT_HOVER: \"rgba(0, 34, 51, 0.80)\",\n  COLOR_GREY_TEXT_INPUT: \"rgba(0, 34, 51, 0.80)\",\n\n  COLOR_BACKGROUND: \"#fff\",\n  COLOR_BACKGROUND_DARK: \"rgba(0, 34, 51, 0.80)\",\n\n  COLOR_INPUT_PLACEHOLDER: \"rgba(0, 34, 51, 0.30)\",\n  COLOR_INPUT_BORDER_FOCUS: \"rgba(0, 34, 51, 0.25)\",\n  COLOR_INPUT_ICON: \"rgba(0, 34, 51, 0.30)\",\n  COLOR_INPUT_ICON_FOCUS: \"rgba(0, 34, 51, 0.50)\",\n};\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { LanguageState } from \"../lib/LanguageStateProvider\";\n\nimport { COLOR } from \"../styles/constants\";\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: COLOR.VDEP_BLUE,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: COLOR.WHITE,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <LanguageState>\n        {({ availableLanguages, language, setLanguage }) => (\n          <div>\n            <span onClick={() => setLanguage(\"nl\")}>NL</span>\n            &nbsp;/&nbsp;\n            <span onClick={() => setLanguage(\"en\")}>EN</span>\n          </div>\n        )}\n      </LanguageState>\n    </div>\n    <Link to=\"/\">index</Link>\n    <Link to=\"/page-2\">page-2</Link>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import * as styledComponents from \"styled-components\";\n\nimport ThemeInterface from \"./theme\";\n\nconst {\n  default: styled,\n  css,\n  // @ts-ignore\n  // injectGlobal,\n  keyframes,\n  ThemeProvider,\n} = styledComponents;\n\nexport { css, keyframes, ThemeProvider };\nexport default styled;\n","import styled from \"./styled-components\";\n\nimport { COLOR, STYLES } from \"./constants\";\n\ninterface Props {\n  headerHeight: number;\n}\n\nexport const StyledContainer = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  background: ${COLOR.WHITE};\n`;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nimport { Provider } from \"../lib/Providers\";\n\nimport Header from \"./Header\";\nimport \"./layout.css\";\n\nimport { StyledContainer } from \"../styles/Main\";\n\nconst Layout = ({ children }) => (\n  <Provider>\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n        <StyledContainer>\n          <Header siteTitle={data.site.siteMetadata.title} />\n          <div\n            style={{\n              margin: `0 auto`,\n              maxWidth: 960,\n              padding: `0px 1.0875rem 1.45rem`,\n              paddingTop: 0,\n            }}\n          >\n            <main>{children}</main>\n            <footer />\n          </div>\n        </StyledContainer>\n      )}\n    />\n  </Provider>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}