{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/lib/LanguageStateProvider.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/lib/Providers.tsx","webpack:///./src/lib/i18n.ts","webpack:///./src/components/image.tsx","webpack:///./src/styles/styled-components.ts","webpack:///./src/styles/constants.ts","webpack:///./src/styles/buttons.ts","webpack:///./src/styles/Main.ts","webpack:///./src/components/header.tsx","webpack:///./src/styles/index.ts","webpack:///./src/components/layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","description","Ctx","React","LanguageState","Consumer","Provider","LanguageStateProvider","_React$Component","props","_this","call","this","setLanguage","language","setState","state","availableLanguages","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0___default","prototype","render","console","log","react__WEBPACK_IMPORTED_MODULE_1__","value","children","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","site","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","siteMetadata","defaultProps","array","arrayOf","StaticQueryContext","createContext","StaticQuery","react_default","staticQueryData","query","object","func","react","translations","ABOUTUS","nl","en","OURSEMINARS","FAQs","MAKEINQ","translate","Image","gatsby_browser_entry_StaticQuery","image","images","edges","find","node","relativePath","includes","fileName","imageSizes","childImageSharp","sizes","gatsby_image_default","alt","_1345654842","styled","styledComponents","createGlobalStyle","COLOR","BLACK","WHITE","WHITE_RGB","RICHBLACK","RICHBLACK_RBG","VDEP_BLUE","VDEP_SECONDARY_BLUE","VDEP_GREEN","RICHBLACK_80","WHITE_15","Button","div","_templateObject","StyledContainer","Main_templateObject","NavBar","_templateObject2","NavBarRight","_templateObject3","LangBox","_templateObject4","LangOption","_templateObject5","isActive","LogoBox","_templateObject6","Logo","_templateObject7","Menu","_templateObject8","MenuItem","_templateObject9","Header","_templateObject10","Hero","_templateObject11","heroImgUrl","drupal","_2176486503","header","nodeQuery","entities","entityTranslations","langcode","Main_Header","components_image","t","onClick","fieldHeroImage","url","WebFont","load","google","families","Global","styles_templateObject","Layout","Providers_Provider","Fragment","components_header","_2994927498"],"mappings":"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","file":"component---src-pages-404-tsx-06bf9bc227a03c7a7952.js","sourcesContent":["import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" description=\"not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import * as React from \"react\";\n\ntype ProviderProps = {\n  language: string;\n  availableLanguages: string[];\n  setLanguage: (language: string) => void;\n};\n\ntype State = {\n  language: string;\n  availableLanguages: string[];\n};\n\nconst Ctx = React.createContext({} as ProviderProps);\n\nexport const LanguageState = Ctx.Consumer;\nconst Provider = Ctx.Provider;\n\nexport class LanguageStateProvider extends React.Component<{}, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      language: \"nl\",\n      availableLanguages: [\"nl\", \"en\"],\n    };\n  }\n\n  setLanguage = (language: string) => {\n    this.setState({\n      language,\n    });\n  };\n\n  render() {\n    console.log({ language: this.state.language });\n    return (\n      <Provider\n        value={{\n          language: this.state.language,\n          setLanguage: this.setLanguage,\n          availableLanguages: this.state.availableLanguages,\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return null;\n  // <Helmet\n  //   htmlAttributes={{\n  //     lang,\n  //   }}\n  //   title={title}\n  //   titleTemplate={`%s | ${site.siteMetadata.title}`}\n  //   meta={[\n  //     {\n  //       name: `description`,\n  //       content: metaDescription,\n  //     },\n  //     {\n  //       property: `og:title`,\n  //       content: title,\n  //     },\n  //     {\n  //       property: `og:description`,\n  //       content: metaDescription,\n  //     },\n  //     {\n  //       property: `og:type`,\n  //       content: `website`,\n  //     },\n  //     {\n  //       name: `twitter:card`,\n  //       content: `summary`,\n  //     },\n  //     {\n  //       name: `twitter:creator`,\n  //       content: site.siteMetadata.author,\n  //     },\n  //     {\n  //       name: `twitter:title`,\n  //       content: title,\n  //     },\n  //     {\n  //       name: `twitter:description`,\n  //       content: metaDescription,\n  //     },\n  //   ]\n  //     .concat(\n  //       keywords.length > 0\n  //         ? {\n  //             name: `keywords`,\n  //             content: keywords.join(`, `),\n  //           }\n  //         : []\n  //     )\n  //     .concat(meta)}\n  // />\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from \"react\";\nimport { LanguageStateProvider } from \"./LanguageStateProvider\";\n\nexport const Provider: React.SFC = ({ children }) => (\n  <LanguageStateProvider>{children}</LanguageStateProvider>\n);\n","const translations = {\n  ABOUTUS: {\n    nl: \"Over ons\",\n    en: \"About us\",\n  },\n  OURSEMINARS: {\n    nl: \"Onze Seminars\",\n    en: \"Our Seminars\",\n  },\n  FAQs: {\n    nl: \"FAQs\",\n    en: \"FAQs\",\n  },\n  MAKEINQ: {\n    nl: \"Doe een aanvraag\",\n    en: \"Make an Inquiry\",\n  },\n};\n\nexport const translate = (string, language) => {\n  return translations[string][language];\n};\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\ntype ImageProps = {\n  fileName: string;\n};\n\nconst Image = props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                sizes(maxWidth: 600) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const image = data.images.edges.find(n => {\n        return n.node.relativePath.includes(props.fileName);\n      });\n      if (!image) {\n        return null;\n      }\n\n      const imageSizes = image.node.childImageSharp.sizes;\n      console.log(imageSizes);\n      return <Img alt={props.alt} sizes={imageSizes} />;\n    }}\n  />\n);\nexport default Image;\n","import * as styledComponents from \"styled-components\";\n\nimport ThemeInterface from \"./theme\";\n\nconst {\n  default: styled,\n  css,\n  // @ts-ignore\n  createGlobalStyle,\n  keyframes,\n  ThemeProvider,\n} = styledComponents;\n\nexport { css, keyframes, ThemeProvider, createGlobalStyle };\nexport default styled;\n","const BLACK = \"#000\";\nconst WHITE = \"#fff\";\nconst WHITE_RGB = \"255,255,255\";\nconst RICHBLACK = \"#002233\";\nconst RICHBLACK_RBG = \"0,34,51\";\nconst VDEP_BLUE = \"#00ADF1\";\nconst VDEP_SECONDARY_BLUE = \"#0084B5\";\nconst VDEP_GREEN = \"7CC04E\";\n\nexport const COLOR = {\n  BLACK,\n  WHITE,\n  WHITE_RGB,\n  RICHBLACK,\n  RICHBLACK_RBG,\n  VDEP_BLUE,\n  VDEP_SECONDARY_BLUE,\n  VDEP_GREEN,\n  RICHBLACK_80: `rgba(${RICHBLACK_RBG},.8)`,\n  WHITE_15: `rgba(${WHITE_RGB}, .15)`,\n};\n\nexport const STYLES = {\n  FONT_FAMILY: `'Source Sans Pro',sans-serif`,\n  MARGIN: 24,\n  HEADER_HEIGHT: 130,\n  TITLES_HEIGHT: 60,\n  ITEM_MODULE_HEIGHT: 65,\n  ITEM_GROUP_HEIGHT: 50,\n  ITEM_HEIGHT: 50,\n  LIST_ITEM_HEIGHT: 70,\n  LIST_ITEM_GROUP_HEIGHT: 30,\n  BOTTOM_BAR_HEIGHT: 90,\n\n  COLOR_ERROR: \"#F4562B\",\n  COLOR_OK: \"#74d200\",\n  COLOR_BORDER: \"rgba(0, 34, 51, 0.10)\",\n\n  COLOR_TITLE: \"rgba(0, 34, 51, 0.80)\",\n  COLOR_GREY_TEXT: \"rgba(0, 34, 51, 0.5)\",\n  COLOR_GREY_TEXT_HOVER: \"rgba(0, 34, 51, 0.80)\",\n  COLOR_GREY_TEXT_INPUT: \"rgba(0, 34, 51, 0.80)\",\n\n  COLOR_BACKGROUND: \"#fff\",\n  COLOR_BACKGROUND_DARK: \"rgba(0, 34, 51, 0.80)\",\n\n  COLOR_INPUT_PLACEHOLDER: \"rgba(0, 34, 51, 0.30)\",\n  COLOR_INPUT_BORDER_FOCUS: \"rgba(0, 34, 51, 0.25)\",\n  COLOR_INPUT_ICON: \"rgba(0, 34, 51, 0.30)\",\n  COLOR_INPUT_ICON_FOCUS: \"rgba(0, 34, 51, 0.50)\",\n};\n","import styled from \"./styled-components\";\nimport { COLOR } from \"./constants\";\n\nexport const Button = styled.div`\n  margin-right: 1rem;\n  width: 22rem;\n  min-width: 4rem;\n  height: 6rem;\n  border: 1px solid transparent;\n  border-radius: 0.5rem;\n  background-color: ${COLOR.VDEP_BLUE};\n  color: ${COLOR.WHITE}\n  font-family: 'Roboto Slab', 'sans-serif';\n  font-weight: bold;\n  font-size: 2rem;\n  line-height: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 1.6rem;\n\n  cursor: pointer;\n`;\n","import styled from \"./styled-components\";\nimport { COLOR, STYLES } from \"./constants\";\nimport { Button } from \"./buttons\";\n\ninterface Props {\n  headerHeight: number;\n}\n\nexport const StyledContainer = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  background: ${COLOR.WHITE};\n  position: relative;\n`;\n\nexport const NavBar = styled.div`\n  height: 8.5rem;\n  width: 100%;\n  display: flex;\n  position: fixed;\n  background: ${COLOR.WHITE_15};\n  border-bottom: 0.1rem solid ${COLOR.VDEP_BLUE};\n  z-index: 1000;\n  justify-content: space-between;\n  align-items: center;\n\n  font-family: \"Roboto Slab\", \"sans-serif\";\n  font-size: 2rem;\n`;\n\nexport const NavBarRight = styled.div`\n  margin-left: 4rem;\n  ${Button} {\n    margin-right: 3rem;\n  }\n  display: flex;\n`;\n\nexport const LangBox = styled.div`\n  color: ${COLOR.VDEP_SECONDARY_BLUE}\n  font-weight: normal;\n  min-width: 10rem;\n  display: flex;\n  align-items: center;\n`;\n\nexport const LangOption = styled.div<{ isActive?: boolean }>`\n  ${props => props.isActive && \"font-weight: bold\"}\n  cursor: pointer;\n`;\n\nexport const LogoBox = styled.div`\n  margin-left: 3rem;\n  width: 30rem;\n`;\n\nexport const Logo = styled.div`\n  width: 6rem;\n`;\n\nexport const Menu = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const MenuItem = styled.div`\n  font-weight: bold;\n  color: ${COLOR.WHITE};\n  margin: 0 2rem;\n`;\n\nexport const Header = styled.div`\n  width: 100%;\n  height: 70vh;\n  position: relative;\n`;\n\ntype HeroProps = {\n  heroImgUrl: string;\n};\n\nexport const Hero = styled.div<HeroProps>`\n  background-image: url(${props => props.heroImgUrl});\n  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);\n  background-size: cover;\n  background-position: top;\n  height: 100%;\n`;\n","import { Link, graphql, StaticQuery, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\n\nimport { LanguageState } from \"../lib/LanguageStateProvider\";\nimport { translate as t } from \"../lib/i18n\";\n\nimport { COLOR } from \"../styles/constants\";\nimport Image from \"./image\";\nimport {\n  Header as StyledHeader,\n  Hero,\n  NavBar,\n  Logo,\n  LogoBox,\n  Menu,\n  MenuItem,\n  NavBarRight,\n  LangBox,\n  LangOption,\n} from \"../styles/Main\";\nimport { Button } from \"../styles/buttons\";\n\nconst Header = () => {\n  const { drupal } = useStaticQuery(graphql`\n    query {\n      drupal {\n        nodeQuery(\n          filter: { conditions: [{ field: \"type\", value: \"header\" }] }\n        ) {\n          entities {\n            entityTranslations {\n              ... on DRUPAL_NodeHeader {\n                uuid\n                langcode {\n                  value\n                }\n                title\n                fieldCogMessage\n                fieldCogSubMessage\n                fieldHeroImage {\n                  alt\n                  url\n                  height\n                  width\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <LanguageState>\n      {({ language, setLanguage }) => {\n        const header = drupal.nodeQuery.entities[0].entityTranslations.find(\n          lang => lang.langcode.value === language\n        );\n        console.log(header);\n        return (\n          <StyledHeader>\n            <NavBar>\n              <LogoBox>\n                <Logo>\n                  <Image fileName={\"VDEP_Vignet_Logo.png\"} />\n                </Logo>\n              </LogoBox>\n              <Menu>\n                <MenuItem>{t(\"ABOUTUS\", language)}</MenuItem>\n                <MenuItem>{t(\"OURSEMINARS\", language)}</MenuItem>\n                <MenuItem>{t(\"FAQs\", language)}</MenuItem>\n              </Menu>\n              <NavBarRight>\n                <LangBox>\n                  <LangOption\n                    isActive={language === \"en\"}\n                    onClick={() => setLanguage(\"en\")}\n                  >\n                    EN\n                  </LangOption>\n                  /\n                  <LangOption\n                    isActive={language === \"nl\"}\n                    onClick={() => setLanguage(\"nl\")}\n                  >\n                    NL\n                  </LangOption>\n                </LangBox>\n                <Button>{t(\"MAKEINQ\", language)}</Button>\n              </NavBarRight>\n            </NavBar>\n            <Hero heroImgUrl={header.fieldHeroImage.url} />\n          </StyledHeader>\n        );\n      }}\n    </LanguageState>\n  );\n};\n\nexport default Header;\n","import { createGlobalStyle } from \"./styled-components\";\nimport WebFont from \"webfontloader\";\n\nimport { COLOR, STYLES } from \"./constants\";\n\nWebFont.load({\n  google: { families: [\"Roboto\", \"Roboto Slab\", \"sans-serif\"] },\n});\n\nexport const Global = createGlobalStyle`\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit;\n}\n\nhtml {\n  // This defines what 1rem is. 100% is 16px (most of the time).\n  font-size: 62.5%; // 10px\n  font-family: 'Roboto';\n}\n\nbody {\n  box-sizing: border-box;\n}\n`;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nimport { Provider } from \"../lib/Providers\";\n\nimport Header from \"./header\";\nimport { Global } from \"../styles\";\n\nimport { StyledContainer } from \"../styles/Main\";\n\nconst Layout = ({ children }) => (\n  <Provider>\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n        <React.Fragment>\n          <Global />\n          <StyledContainer>\n            <Header />\n            <div>\n              <main>{children}</main>\n              <footer />\n            </div>\n          </StyledContainer>\n        </React.Fragment>\n      )}\n    />\n  </Provider>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}