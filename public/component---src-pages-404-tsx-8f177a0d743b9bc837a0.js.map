{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.tsx","webpack:///./src/styles/constants.ts","webpack:///./src/components/Header.tsx","webpack:///./src/styles/styled-components.ts","webpack:///./src/styles/Main.ts","webpack:///./src/components/layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","description","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","site","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","siteMetadata","defaultProps","array","arrayOf","COLOR","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","styled","styledComponents","StyledContainer","div","_templateObject","Layout","components_Header","paddingTop","_755544856","node"],"mappings":"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","file":"component---src-pages-404-tsx-8f177a0d743b9bc837a0.js","sourcesContent":["import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" description=\"not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return null;\n  // <Helmet\n  //   htmlAttributes={{\n  //     lang,\n  //   }}\n  //   title={title}\n  //   titleTemplate={`%s | ${site.siteMetadata.title}`}\n  //   meta={[\n  //     {\n  //       name: `description`,\n  //       content: metaDescription,\n  //     },\n  //     {\n  //       property: `og:title`,\n  //       content: title,\n  //     },\n  //     {\n  //       property: `og:description`,\n  //       content: metaDescription,\n  //     },\n  //     {\n  //       property: `og:type`,\n  //       content: `website`,\n  //     },\n  //     {\n  //       name: `twitter:card`,\n  //       content: `summary`,\n  //     },\n  //     {\n  //       name: `twitter:creator`,\n  //       content: site.siteMetadata.author,\n  //     },\n  //     {\n  //       name: `twitter:title`,\n  //       content: title,\n  //     },\n  //     {\n  //       name: `twitter:description`,\n  //       content: metaDescription,\n  //     },\n  //   ]\n  //     .concat(\n  //       keywords.length > 0\n  //         ? {\n  //             name: `keywords`,\n  //             content: keywords.join(`, `),\n  //           }\n  //         : []\n  //     )\n  //     .concat(meta)}\n  // />\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","const BLACK = \"#000\";\nconst WHITE = \"#fff\";\nconst RICHBLACK = \"#002233\";\nconst RICHBLACK_RBG = \"0,34,51\";\nconst VDEP_BLUE = \"#00AEED\";\nconst VDEP_SECONDARY_BLUE = \"0183B7\";\nconst VDEP_GREEN = \"7CC04E\";\n\nexport const COLOR = {\n  BLACK,\n  WHITE,\n  RICHBLACK,\n  RICHBLACK_RBG,\n  VDEP_BLUE,\n  VDEP_SECONDARY_BLUE,\n  VDEP_GREEN,\n  RICHBLACK_80: `rgba(${RICHBLACK_RBG},.8)`,\n};\n\nexport const STYLES = {\n  FONT_FAMILY: `'Source Sans Pro',sans-serif`,\n  MARGIN: 24,\n  HEADER_HEIGHT: 130,\n  TITLES_HEIGHT: 60,\n  ITEM_MODULE_HEIGHT: 65,\n  ITEM_GROUP_HEIGHT: 50,\n  ITEM_HEIGHT: 50,\n  LIST_ITEM_HEIGHT: 70,\n  LIST_ITEM_GROUP_HEIGHT: 30,\n  BOTTOM_BAR_HEIGHT: 90,\n\n  COLOR_ERROR: \"#F4562B\",\n  COLOR_OK: \"#74d200\",\n  COLOR_BORDER: \"rgba(0, 34, 51, 0.10)\",\n\n  COLOR_TITLE: \"rgba(0, 34, 51, 0.80)\",\n  COLOR_GREY_TEXT: \"rgba(0, 34, 51, 0.5)\",\n  COLOR_GREY_TEXT_HOVER: \"rgba(0, 34, 51, 0.80)\",\n  COLOR_GREY_TEXT_INPUT: \"rgba(0, 34, 51, 0.80)\",\n\n  COLOR_BACKGROUND: \"#fff\",\n  COLOR_BACKGROUND_DARK: \"rgba(0, 34, 51, 0.80)\",\n\n  COLOR_INPUT_PLACEHOLDER: \"rgba(0, 34, 51, 0.30)\",\n  COLOR_INPUT_BORDER_FOCUS: \"rgba(0, 34, 51, 0.25)\",\n  COLOR_INPUT_ICON: \"rgba(0, 34, 51, 0.30)\",\n  COLOR_INPUT_ICON_FOCUS: \"rgba(0, 34, 51, 0.50)\",\n};\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { COLOR } from \"../styles/constants\";\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: COLOR.VDEP_BLUE,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: COLOR.WHITE,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import * as styledComponents from \"styled-components\";\n\nimport ThemeInterface from \"./theme\";\n\nconst {\n  default: styled,\n  css,\n  // @ts-ignore\n  // injectGlobal,\n  keyframes,\n  ThemeProvider,\n} = styledComponents;\n\nexport { css, keyframes, ThemeProvider };\nexport default styled;\n","import styled from \"./styled-components\";\n\nimport { COLOR, STYLES } from \"./constants\";\n\ninterface Props {\n  headerHeight: number;\n}\n\nexport const StyledContainer = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  background: ${COLOR.WHITE};\n`;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./Header\";\nimport \"./layout.css\";\n\nimport { StyledContainer } from \"../styles/Main\";\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <StyledContainer>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer />\n        </div>\n      </StyledContainer>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}