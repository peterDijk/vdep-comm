{"version":3,"sources":["webpack:///./src/components/seo.tsx","webpack:///./src/pages/404.tsx"],"names":["SEO","_ref","description","site","lang","meta","keywords","title","_2417117884","data","siteMetadata","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","NotFoundPage","react_default","a","createElement","layout","seo"],"mappings":"uJAYA,SAASA,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YACLC,GADiDF,EAA/BG,KAA+BH,EAAzBI,KAAyBJ,EAAnBK,SAAmBL,EAATM,MAASC,EAAAC,KACjDN,MAcgBD,GAAeC,EAAKO,aAAaR,YAEzD,OAAO,KAqDTF,EAAIW,aAAe,CACjBP,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZN,EAAIY,UAAY,CACdV,YAAaW,IAAUC,OACvBV,KAAMS,IAAUC,OAChBT,KAAMQ,IAAUE,MAChBT,SAAUO,IAAUG,QAAQH,IAAUC,QACtCP,MAAOM,IAAUC,OAAOG,YAGXjB,QCnFAkB,UARM,kBACnBC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAD,CAAKhB,MAAM,iBAAiBL,YAAY,cACxCiB,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA","file":"component---src-pages-404-tsx-5a1b5d20a0e665ff1620.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return null;\n  // <Helmet\n  //   htmlAttributes={{\n  //     lang,\n  //   }}\n  //   title={title}\n  //   titleTemplate={`%s | ${site.siteMetadata.title}`}\n  //   meta={[\n  //     {\n  //       name: `description`,\n  //       content: metaDescription,\n  //     },\n  //     {\n  //       property: `og:title`,\n  //       content: title,\n  //     },\n  //     {\n  //       property: `og:description`,\n  //       content: metaDescription,\n  //     },\n  //     {\n  //       property: `og:type`,\n  //       content: `website`,\n  //     },\n  //     {\n  //       name: `twitter:card`,\n  //       content: `summary`,\n  //     },\n  //     {\n  //       name: `twitter:creator`,\n  //       content: site.siteMetadata.author,\n  //     },\n  //     {\n  //       name: `twitter:title`,\n  //       content: title,\n  //     },\n  //     {\n  //       name: `twitter:description`,\n  //       content: metaDescription,\n  //     },\n  //   ]\n  //     .concat(\n  //       keywords.length > 0\n  //         ? {\n  //             name: `keywords`,\n  //             content: keywords.join(`, `),\n  //           }\n  //         : []\n  //     )\n  //     .concat(meta)}\n  // />\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" description=\"not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n"],"sourceRoot":""}